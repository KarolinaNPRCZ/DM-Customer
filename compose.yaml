version: '3'
services:
  mongodb:
    image: 'mongo:5.0'
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: dm-products
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro


  mongo-express:
    image: 'mongo-express:0.54.0'
    container_name: mongoExpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mongoExpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mongoExpress
    links:
      - mongodb
    restart: always
    ports:
      - "8081:8081"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - pgdata:/var/lib/postgresql/data


  dm-customer:
    container_name: dm-customer
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
      - "5005:5005"
    environment:
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB_NAME: users
      POSTGRES_USERNAME: user
      POSTGRES_PASSWORD: password
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: password
      MONGODB_HOSTNAME: mongo
      MONGODB_PORT: 27017
      MONGODB_NAME: dm-products
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

    depends_on:
      - postgres

volumes:
  pgdata: {}
networks:
  dm-customer-backend:
